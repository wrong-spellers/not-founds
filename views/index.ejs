<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <!-- Element UI CSS -->
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <!-- Material Design Lite -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://code.getmdl.io/1.1.3/material.teal-blue.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css?family=Knewave');

        html {
            background-color:#E9EEF3;
        }

        .el-header {
            background-color:#FFF;
            color:#333;
            text-align:center;
            line-height:60px;
            width:100vw;
            position:fixed;
            z-index:999;
        }

        .title {
            font-size:24px;
            font-family:knewave, serif;
        }

        .el-main__New,.el-main__Hot,.el-main__Bookmark {
            width:100%;
            display:inline-flex;
            flex-wrap:wrap;
            justify-content:space-around;
        }

        .el-menu-item {
            width:33.3%;
            font-weight:700;
        }

        .icon-container {
            text-align:right;
        }

        .el-main {
            margin-top:60px;
            background-color:#E9EEF3;
            color:#333;
        }

        .mdl-card {
            margin-top:2rem;
            margin-bottom:2rem;
            width:320px;
        }

        .mdl-card__media {
            height:240px;
        }

        .mdl-card__supporting-text {
            display:inline-flex;
            align-items:center;
            justify-content:space-between;
        }

        .el-button {
            border-radius:100px;
            align-items:center;
        }
        li.el-menu-item {
            padding: 0;
        }
        .el-menu-item > a{
            display: block;
            height: 100%;
            width: 100%;
        }

    </style>
</head>

<body>
<div id="app">
    <el-container>
        <el-header>
            <el-col :span="8">
                <el-menu :default-active="activeIndex" class="el-menu-demo" mode="horizontal">
                    <el-menu-item @click="New = true, Hot = false, Bookmark = false" index="1"><a href="/"><i class="material-icons">fiber_new</i></a></el-menu-item>
                    <el-menu-item @click="New = false, Hot = true, Bookmark = false" index="2"><a href="/hot"><i class="material-icons">whatshot</i></a></el-menu-item>
                    <el-menu-item @click="New = false, Hot = false, Bookmark = true" index="3"><a href="/bookmarks"><i class="material-icons">turned_in</i></a></el-menu-item>
                </el-menu>
            </el-col>

            <el-col :span="8">
                <div class="title">NOT FOUNDS</div>
            </el-col>

            <el-col :span="8" class="icon-container">
                <button id="demo-menu-lower-right" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab">
                    <i class="material-icons">person</i>
                </button>
                <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect" for="demo-menu-lower-right">
                    <li disabled class="mdl-menu__item">
                        <%= login.name %>
                    </li>
                    <!--<li class="mdl-menu__item" @click="dialogSignVisible = true">Sign in/Sign up</li>-->
                    <a href="/users/logout" style="text-decoration: none">
                        <li class="mdl-menu__item">Sign out</li>
                    </a>
                </ul>
                <button @click="dialogFormVisible = true" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-button--colored">
                    <i class="material-icons">add</i>
                </button>

            </el-col>
        </el-header>

        <!--  dialog -->
        <el-dialog title="Sign up or Sign in" :visible.sync="dialogSignVisible">
            <el-form :model="sign">
                <el-form-item label="User name" :label-width="formLabelWidth">
                    <el-input v-model="sign.username" auto-complete="off"></el-input>
                </el-form-item>
                <el-form-item label="Password" :label-width="formLabelWidth">
                    <el-input v-model="sign.password" auto-complete="off"></el-input>
                </el-form-item>
            </el-form>
            <span slot="footer" class="dialog-footer">
              <el-button @click="dialogSignVisible = false">Cancel</el-button>
              <el-button type="primary" @click="dialogSignVisible = false,startHacking()">OK</el-button>
            </span>
        </el-dialog>

        <!--  dialog -->
        <el-dialog title="Plz 404" :visible.sync="dialogFormVisible">
            <el-form :model="form" name="myform" method="post" action="/">
                <el-form-item label="Page name" :label-width="formLabelWidth">
                    <el-input name="title" v-model="form.name" auto-complete="off"></el-input>
                </el-form-item>
                <el-form-item label="URL" :label-width="formLabelWidth">
                    <el-input name="msg" v-model="form.url" auto-complete="off"></el-input>
                </el-form-item>
            </el-form>
            <span slot="footer" class="dialog-footer">
                  <el-button @click="dialogFormVisible = false">Cancel</el-button>
                  <el-button type="primary" @click="onSubmit">OK</el-button>
                </span>
        </el-dialog>


        <!-- MAIN CONTENT -->
        <el-main>

            <!-- NEW  -->
            <div class="el-main__New" v-show="New">

                <% for(var i in collection) { %>
                <% let id = collection[i].attributes.id %>
                <% let title = collection[i].attributes.title %>
                <% let message = collection[i].attributes.message %>
                <% let liked = collection[i].attributes.liked %>
                <%
                    let checkedAttr = "";
                    if(collection[i].attributes.liked){
                        checkedAttr = " checked ";
                    }
                %>

                <!-- Square card -->
                <div class="mdl-card mdl-shadow--2dp demo-card-square">
                    <div class="mdl-card__media">
                        <a href="<%= message %>" target="_blank">
                            <img title="<%= message %>" src="http://api.screenshotmachine.com/?key=de8291&dimension=320x240&url=<%= message %>" alt="<%= message %>">
                        </a>
                    </div>
                    <div class="mdl-card__supporting-text meta meta--fill mdl-color-text--grey-600">
                        <strong><%= title %></strong>
                        <label class="mdl-icon-toggle mdl-js-icon-toggle mdl-js-ripple-effect" for="icon-toggle-<%= id %>">
                            <input <%= checkedAttr %> @click="onBookmark(<%= id %>)" type="checkbox" id="icon-toggle-<%= id %>" class="mdl-icon-toggle__input">
                            <i class="mdl-icon-toggle__label material-icons">turned_in</i>
                        </label>
                    </div>
                </div>

                <% } %>

            </div>


            <!--  HOT -->
            <div class="el-main__Hot" v-show="Hot">
            </div>


            <!-- BOOKMARK  -->
            <div class="el-main__Bookmark" v-show="Bookmark">
            </div>

        </el-main>
    </el-container>
    <!-- <el-button @click="startHacking">Start</el-button> -->
</div>
</body>
<script src="https://code.getmdl.io/1.1.3/material.min.js"></script>
<!-- import Vue before Element -->
<script src="https://unpkg.com/vue/dist/vue.js"></script>
<!-- import JavaScript -->
<script src="https://unpkg.com/element-ui/lib/index.js"></script>
<script>
    new Vue({
        el: '#app',
        data() {
            return {
                Title: 'Title',
                New: true,
                Hot: false,
                Bookmark: false,
                activeIndex: '<%= activeIndex %>',
                dialogFormVisible: false,
                form: {
                    name: '',
                    url: ''
                },
                formLabelWidth: '100px',
                sign: {
                    username: '',
                    password: ''
                },
                dialogSignVisible: false
            };
        },
        methods: {
            onSubmit() {
                console.log('submit!');
                document.myform.submit();
            },
            onBookmark(postId) {
                if (document.getElementById("icon-toggle-" + postId).checked) {
                    console.log('LIKE: ' + postId)
                    // GET /dislike/13
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "/like/" + postId, true); // false for synchronous request
                    xmlHttp.send(null);
                } else {
                    console.log('DISLIKE: ' + postId)
                    // GET /like/13
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "/dislike/" + postId, true); // false for synchronous request
                    xmlHttp.send(null);
                }
            }
        }
    })
</script>
